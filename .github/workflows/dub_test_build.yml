on:
  workflow_call:
    inputs:
      dep_config:
        description: 'Config to build'
        required: true
        type: string
      dep_version:
        description: 'Pinned dependency version'
        required: true
        type: string
      repo:
        description: 'The repository containing the code to build'
        required: true
        type: string
      repo_tag:
        description: 'The tag to attempt to build'
        required: true
        type: string
      may_fail:
        description: 'Whether it may fail'
        default: false
        required: false
        type: boolean
      linux_deps:
        description: 'Space seperated dependencies to install on ubuntu.'
        default: ''
        required: false
        type: string
      osx_deps:
        description: 'Space seperated dependencies to install on macOS.'
        default: ''
        required: false
        type: string
      run_tests:
        description: 'Whether tests should be run'
        default: false
        required: false
        type: boolean


name: 'Dub dependant build-check'
run-name: 'Build-check ${{ inputs.repo }} ${{ inputs.repo_tag }}'

jobs:
  try_build:
    name: '${{ matrix.dc }} on ${{ matrix.os }}'
    continue-on-error: ${{ inputs.may_fail }}
    strategy:
      fail-fast: true
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        dc: [ldc, ldc-beta, dmd, dmd-beta]
    env:
      DUB_BUILD_CFG_FLAG: ${{ inputs.dep_config != '' && format('--config={0}', inputs.dep_config) || '' }}
      DUB_BUILD_CFG_NAME: ${{ inputs.dep_config != '' && inputs.dep_config || 'default' }}
    
    runs-on: ${{ matrix.os }}
    steps:
    - name: 'Install ${{ matrix.dc }}'
      uses: dlang-community/setup-dlang@v2
      with:
        compiler: ${{ matrix.dc }}
      
    - name: 'Install linux dependencies...'
      if: ${{ inputs.linux_deps != '' && matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt install -y ${{ inputs.linux_deps }}
      
    - name: 'Install osx dependencies...'
      if: ${{ inputs.osx_deps != '' && matrix.os == 'macOS-latest' }}
      run: |
        sudo homebrew install ${{ inputs.osx_deps }}
    
    - name: 'Checkout ${{ github.repository }}'
      uses: actions/checkout@v4
      with:
        path: '${{ github.repository }}'
      
    - name: 'Pin local package to ${{ inputs.dep_version }}'
      run: |
        dub add-local ${{ github.repository }} "${{ inputs.dep_version }}"
    
    - name: 'Checkout ${{ inputs.repo }}'
      uses: actions/checkout@v4
      with:
        repository: '${{ inputs.repo }}'
        ref: '${{ inputs.repo_tag }}'
        path: '${{ inputs.repo }}'
      
    - name: 'Attempting ${{ env.DUB_BUILD_CFG_NAME }} build...'
      working-directory: '${{ inputs.repo }}'
      run: |
        dub build ${{ env.DUB_BUILD_CFG_FLAG }} --build=debug
        dub build ${{ env.DUB_BUILD_CFG_FLAG }} --build=release
      
    - name: 'Attempting to run tests...'
      working-directory: '${{ inputs.repo }}'
      if: ${{ inputs.run_tests }}
      run: |
        dub test ${{ env.DUB_BUILD_CFG_FLAG }} --build=debug
        dub test ${{ env.DUB_BUILD_CFG_FLAG }} --build=release